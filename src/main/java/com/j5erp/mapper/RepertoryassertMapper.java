package com.j5erp.mapper;

import com.j5erp.entity.Repertoryassert;
import java.util.List;
import org.apache.ibatis.annotations.Arg;
import org.apache.ibatis.annotations.ConstructorArgs;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.type.JdbcType;

public interface RepertoryassertMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table REPERTORYASSERT
     *
     * @mbggenerated
     */
    @Delete({
        "delete from REPERTORYASSERT",
        "where REPERTORYID = #{repertoryid,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String repertoryid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table REPERTORYASSERT
     *
     * @mbggenerated
     */
    @Insert({
        "insert into REPERTORYASSERT (REPERTORYID, REPERTORYNAME, ",
        "REPERTORYCN_SHORT, LINKMAN, ",
        "PHONE, LINKADDRESS, ",
        "REPERTORYADDRESS, REMARK)",
        "values (#{repertoryid,jdbcType=VARCHAR}, #{repertoryname,jdbcType=VARCHAR}, ",
        "#{repertorycnShort,jdbcType=VARCHAR}, #{linkman,jdbcType=VARCHAR}, ",
        "#{phone,jdbcType=VARCHAR}, #{linkaddress,jdbcType=VARCHAR}, ",
        "#{repertoryaddress,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR})"
    })
    int insert(Repertoryassert record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table REPERTORYASSERT
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "REPERTORYID, REPERTORYNAME, REPERTORYCN_SHORT, LINKMAN, PHONE, LINKADDRESS, ",
        "REPERTORYADDRESS, REMARK",
        "from REPERTORYASSERT",
        "where REPERTORYID = #{repertoryid,jdbcType=VARCHAR}"
    })
    @ConstructorArgs({
        @Arg(column="REPERTORYID", javaType=String.class, jdbcType=JdbcType.VARCHAR, id=true),
        @Arg(column="REPERTORYNAME", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="REPERTORYCN_SHORT", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="LINKMAN", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="PHONE", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="LINKADDRESS", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="REPERTORYADDRESS", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="REMARK", javaType=String.class, jdbcType=JdbcType.VARCHAR)
    })
    Repertoryassert selectByPrimaryKey(String repertoryid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table REPERTORYASSERT
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "REPERTORYID, REPERTORYNAME, REPERTORYCN_SHORT, LINKMAN, PHONE, LINKADDRESS, ",
        "REPERTORYADDRESS, REMARK",
        "from REPERTORYASSERT"
    })
    @ConstructorArgs({
        @Arg(column="REPERTORYID", javaType=String.class, jdbcType=JdbcType.VARCHAR, id=true),
        @Arg(column="REPERTORYNAME", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="REPERTORYCN_SHORT", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="LINKMAN", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="PHONE", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="LINKADDRESS", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="REPERTORYADDRESS", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="REMARK", javaType=String.class, jdbcType=JdbcType.VARCHAR)
    })
    List<Repertoryassert> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table REPERTORYASSERT
     *
     * @mbggenerated
     */
    @Update({
        "update REPERTORYASSERT",
        "set REPERTORYNAME = #{repertoryname,jdbcType=VARCHAR},",
          "REPERTORYCN_SHORT = #{repertorycnShort,jdbcType=VARCHAR},",
          "LINKMAN = #{linkman,jdbcType=VARCHAR},",
          "PHONE = #{phone,jdbcType=VARCHAR},",
          "LINKADDRESS = #{linkaddress,jdbcType=VARCHAR},",
          "REPERTORYADDRESS = #{repertoryaddress,jdbcType=VARCHAR},",
          "REMARK = #{remark,jdbcType=VARCHAR}",
        "where REPERTORYID = #{repertoryid,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(Repertoryassert record);
}