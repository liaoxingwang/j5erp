package com.j5erp.mapper;

import com.j5erp.entity.Saleorderdetail;
import java.math.BigDecimal;
import java.util.Date;
import java.util.List;
import org.apache.ibatis.annotations.Arg;
import org.apache.ibatis.annotations.ConstructorArgs;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.type.JdbcType;

public interface SaleorderdetailMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SALEORDERDETAIL
     *
     * @mbggenerated
     */
    @Delete({
        "delete from SALEORDERDETAIL",
        "where SOID = #{soid,jdbcType=VARCHAR}",
          "and LINENO = #{lineno,jdbcType=DECIMAL}"
    })
    int deleteByPrimaryKey(@Param("soid") String soid, @Param("lineno") Long lineno);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SALEORDERDETAIL
     *
     * @mbggenerated
     */
    @Insert({
        "insert into SALEORDERDETAIL (SOID, LINENO, ",
        "MID, MNAME, STANDARD, ",
        "UNITID, UNITNAME, ",
        "NUM, BEFOREDISCOUNT, ",
        "DISCOUNT, PRICE, ",
        "TOTALPRICE, TAXRATE, ",
        "TOTALTAX, TOTALMONEY, ",
        "BEFOREOUT, ESTIMATEDATE, ",
        "LEFTNUM, ISGIFT, ",
        "FROMBILLTYPE, FROMBILLID)",
        "values (#{soid,jdbcType=VARCHAR}, #{lineno,jdbcType=DECIMAL}, ",
        "#{mid,jdbcType=VARCHAR}, #{mname,jdbcType=VARCHAR}, #{standard,jdbcType=VARCHAR}, ",
        "#{unitid,jdbcType=VARCHAR}, #{unitname,jdbcType=VARCHAR}, ",
        "#{num,jdbcType=DECIMAL}, #{beforediscount,jdbcType=DECIMAL}, ",
        "#{discount,jdbcType=DECIMAL}, #{price,jdbcType=DECIMAL}, ",
        "#{totalprice,jdbcType=DECIMAL}, #{taxrate,jdbcType=DECIMAL}, ",
        "#{totaltax,jdbcType=DECIMAL}, #{totalmoney,jdbcType=DECIMAL}, ",
        "#{beforeout,jdbcType=DECIMAL}, #{estimatedate,jdbcType=TIMESTAMP}, ",
        "#{leftnum,jdbcType=DECIMAL}, #{isgift,jdbcType=DECIMAL}, ",
        "#{frombilltype,jdbcType=DECIMAL}, #{frombillid,jdbcType=VARCHAR})"
    })
    int insert(Saleorderdetail record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SALEORDERDETAIL
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "SOID, LINENO, MID, MNAME, STANDARD, UNITID, UNITNAME, NUM, BEFOREDISCOUNT, DISCOUNT, ",
        "PRICE, TOTALPRICE, TAXRATE, TOTALTAX, TOTALMONEY, BEFOREOUT, ESTIMATEDATE, LEFTNUM, ",
        "ISGIFT, FROMBILLTYPE, FROMBILLID",
        "from SALEORDERDETAIL",
        "where SOID = #{soid,jdbcType=VARCHAR}",
          "and LINENO = #{lineno,jdbcType=DECIMAL}"
    })
    @ConstructorArgs({
        @Arg(column="SOID", javaType=String.class, jdbcType=JdbcType.VARCHAR, id=true),
        @Arg(column="LINENO", javaType=Long.class, jdbcType=JdbcType.DECIMAL, id=true),
        @Arg(column="MID", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="MNAME", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="STANDARD", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="UNITID", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="UNITNAME", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="NUM", javaType=Long.class, jdbcType=JdbcType.DECIMAL),
        @Arg(column="BEFOREDISCOUNT", javaType=BigDecimal.class, jdbcType=JdbcType.DECIMAL),
        @Arg(column="DISCOUNT", javaType=BigDecimal.class, jdbcType=JdbcType.DECIMAL),
        @Arg(column="PRICE", javaType=BigDecimal.class, jdbcType=JdbcType.DECIMAL),
        @Arg(column="TOTALPRICE", javaType=BigDecimal.class, jdbcType=JdbcType.DECIMAL),
        @Arg(column="TAXRATE", javaType=BigDecimal.class, jdbcType=JdbcType.DECIMAL),
        @Arg(column="TOTALTAX", javaType=BigDecimal.class, jdbcType=JdbcType.DECIMAL),
        @Arg(column="TOTALMONEY", javaType=BigDecimal.class, jdbcType=JdbcType.DECIMAL),
        @Arg(column="BEFOREOUT", javaType=Long.class, jdbcType=JdbcType.DECIMAL),
        @Arg(column="ESTIMATEDATE", javaType=Date.class, jdbcType=JdbcType.TIMESTAMP),
        @Arg(column="LEFTNUM", javaType=Long.class, jdbcType=JdbcType.DECIMAL),
        @Arg(column="ISGIFT", javaType=Short.class, jdbcType=JdbcType.DECIMAL),
        @Arg(column="FROMBILLTYPE", javaType=Short.class, jdbcType=JdbcType.DECIMAL),
        @Arg(column="FROMBILLID", javaType=String.class, jdbcType=JdbcType.VARCHAR)
    })
    Saleorderdetail selectByPrimaryKey(@Param("soid") String soid, @Param("lineno") Long lineno);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SALEORDERDETAIL
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "SOID, LINENO, MID, MNAME, STANDARD, UNITID, UNITNAME, NUM, BEFOREDISCOUNT, DISCOUNT, ",
        "PRICE, TOTALPRICE, TAXRATE, TOTALTAX, TOTALMONEY, BEFOREOUT, ESTIMATEDATE, LEFTNUM, ",
        "ISGIFT, FROMBILLTYPE, FROMBILLID",
        "from SALEORDERDETAIL"
    })
    @ConstructorArgs({
        @Arg(column="SOID", javaType=String.class, jdbcType=JdbcType.VARCHAR, id=true),
        @Arg(column="LINENO", javaType=Long.class, jdbcType=JdbcType.DECIMAL, id=true),
        @Arg(column="MID", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="MNAME", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="STANDARD", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="UNITID", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="UNITNAME", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="NUM", javaType=Long.class, jdbcType=JdbcType.DECIMAL),
        @Arg(column="BEFOREDISCOUNT", javaType=BigDecimal.class, jdbcType=JdbcType.DECIMAL),
        @Arg(column="DISCOUNT", javaType=BigDecimal.class, jdbcType=JdbcType.DECIMAL),
        @Arg(column="PRICE", javaType=BigDecimal.class, jdbcType=JdbcType.DECIMAL),
        @Arg(column="TOTALPRICE", javaType=BigDecimal.class, jdbcType=JdbcType.DECIMAL),
        @Arg(column="TAXRATE", javaType=BigDecimal.class, jdbcType=JdbcType.DECIMAL),
        @Arg(column="TOTALTAX", javaType=BigDecimal.class, jdbcType=JdbcType.DECIMAL),
        @Arg(column="TOTALMONEY", javaType=BigDecimal.class, jdbcType=JdbcType.DECIMAL),
        @Arg(column="BEFOREOUT", javaType=Long.class, jdbcType=JdbcType.DECIMAL),
        @Arg(column="ESTIMATEDATE", javaType=Date.class, jdbcType=JdbcType.TIMESTAMP),
        @Arg(column="LEFTNUM", javaType=Long.class, jdbcType=JdbcType.DECIMAL),
        @Arg(column="ISGIFT", javaType=Short.class, jdbcType=JdbcType.DECIMAL),
        @Arg(column="FROMBILLTYPE", javaType=Short.class, jdbcType=JdbcType.DECIMAL),
        @Arg(column="FROMBILLID", javaType=String.class, jdbcType=JdbcType.VARCHAR)
    })
    List<Saleorderdetail> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SALEORDERDETAIL
     *
     * @mbggenerated
     */
    @Update({
        "update SALEORDERDETAIL",
        "set MID = #{mid,jdbcType=VARCHAR},",
          "MNAME = #{mname,jdbcType=VARCHAR},",
          "STANDARD = #{standard,jdbcType=VARCHAR},",
          "UNITID = #{unitid,jdbcType=VARCHAR},",
          "UNITNAME = #{unitname,jdbcType=VARCHAR},",
          "NUM = #{num,jdbcType=DECIMAL},",
          "BEFOREDISCOUNT = #{beforediscount,jdbcType=DECIMAL},",
          "DISCOUNT = #{discount,jdbcType=DECIMAL},",
          "PRICE = #{price,jdbcType=DECIMAL},",
          "TOTALPRICE = #{totalprice,jdbcType=DECIMAL},",
          "TAXRATE = #{taxrate,jdbcType=DECIMAL},",
          "TOTALTAX = #{totaltax,jdbcType=DECIMAL},",
          "TOTALMONEY = #{totalmoney,jdbcType=DECIMAL},",
          "BEFOREOUT = #{beforeout,jdbcType=DECIMAL},",
          "ESTIMATEDATE = #{estimatedate,jdbcType=TIMESTAMP},",
          "LEFTNUM = #{leftnum,jdbcType=DECIMAL},",
          "ISGIFT = #{isgift,jdbcType=DECIMAL},",
          "FROMBILLTYPE = #{frombilltype,jdbcType=DECIMAL},",
          "FROMBILLID = #{frombillid,jdbcType=VARCHAR}",
        "where SOID = #{soid,jdbcType=VARCHAR}",
          "and LINENO = #{lineno,jdbcType=DECIMAL}"
    })
    int updateByPrimaryKey(Saleorderdetail record);
}