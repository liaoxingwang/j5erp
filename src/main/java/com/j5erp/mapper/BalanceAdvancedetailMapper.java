package com.j5erp.mapper;

import com.j5erp.entity.BalanceAdvancedetail;
import java.math.BigDecimal;
import java.util.List;
import org.apache.ibatis.annotations.Arg;
import org.apache.ibatis.annotations.ConstructorArgs;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.type.JdbcType;

public interface BalanceAdvancedetailMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BALANCE_ADVANCEDETAIL
     *
     * @mbggenerated
     */
    @Delete({
        "delete from BALANCE_ADVANCEDETAIL",
        "where BAID = #{baid,jdbcType=VARCHAR}",
          "and BALINE = #{baline,jdbcType=DECIMAL}"
    })
    int deleteByPrimaryKey(@Param("baid") String baid, @Param("baline") Long baline);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BALANCE_ADVANCEDETAIL
     *
     * @mbggenerated
     */
    @Insert({
        "insert into BALANCE_ADVANCEDETAIL (BAID, BALINE, ",
        "ADID, ADLINE, BAMONEY, ",
        "TEST1, TEST2)",
        "values (#{baid,jdbcType=VARCHAR}, #{baline,jdbcType=DECIMAL}, ",
        "#{adid,jdbcType=VARCHAR}, #{adline,jdbcType=VARCHAR}, #{bamoney,jdbcType=DECIMAL}, ",
        "#{test1,jdbcType=VARCHAR}, #{test2,jdbcType=VARCHAR})"
    })
    int insert(BalanceAdvancedetail record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BALANCE_ADVANCEDETAIL
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "BAID, BALINE, ADID, ADLINE, BAMONEY, TEST1, TEST2",
        "from BALANCE_ADVANCEDETAIL",
        "where BAID = #{baid,jdbcType=VARCHAR}",
          "and BALINE = #{baline,jdbcType=DECIMAL}"
    })
    @ConstructorArgs({
        @Arg(column="BAID", javaType=String.class, jdbcType=JdbcType.VARCHAR, id=true),
        @Arg(column="BALINE", javaType=Long.class, jdbcType=JdbcType.DECIMAL, id=true),
        @Arg(column="ADID", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="ADLINE", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="BAMONEY", javaType=BigDecimal.class, jdbcType=JdbcType.DECIMAL),
        @Arg(column="TEST1", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="TEST2", javaType=String.class, jdbcType=JdbcType.VARCHAR)
    })
    BalanceAdvancedetail selectByPrimaryKey(@Param("baid") String baid, @Param("baline") Long baline);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BALANCE_ADVANCEDETAIL
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "BAID, BALINE, ADID, ADLINE, BAMONEY, TEST1, TEST2",
        "from BALANCE_ADVANCEDETAIL"
    })
    @ConstructorArgs({
        @Arg(column="BAID", javaType=String.class, jdbcType=JdbcType.VARCHAR, id=true),
        @Arg(column="BALINE", javaType=Long.class, jdbcType=JdbcType.DECIMAL, id=true),
        @Arg(column="ADID", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="ADLINE", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="BAMONEY", javaType=BigDecimal.class, jdbcType=JdbcType.DECIMAL),
        @Arg(column="TEST1", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="TEST2", javaType=String.class, jdbcType=JdbcType.VARCHAR)
    })
    List<BalanceAdvancedetail> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BALANCE_ADVANCEDETAIL
     *
     * @mbggenerated
     */
    @Update({
        "update BALANCE_ADVANCEDETAIL",
        "set ADID = #{adid,jdbcType=VARCHAR},",
          "ADLINE = #{adline,jdbcType=VARCHAR},",
          "BAMONEY = #{bamoney,jdbcType=DECIMAL},",
          "TEST1 = #{test1,jdbcType=VARCHAR},",
          "TEST2 = #{test2,jdbcType=VARCHAR}",
        "where BAID = #{baid,jdbcType=VARCHAR}",
          "and BALINE = #{baline,jdbcType=DECIMAL}"
    })
    int updateByPrimaryKey(BalanceAdvancedetail record);
}