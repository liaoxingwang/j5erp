package com.j5erp.mapper;

import com.j5erp.entity.Address;
import java.util.List;
import org.apache.ibatis.annotations.Arg;
import org.apache.ibatis.annotations.ConstructorArgs;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.type.JdbcType;

public interface AddressMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ADDRESS
     *
     * @mbggenerated
     */
    @Delete({
        "delete from ADDRESS",
        "where ADDRESSID = #{addressid,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String addressid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ADDRESS
     *
     * @mbggenerated
     */
    @Insert({
        "insert into ADDRESS (ADDRESSID, ADDRESS, ",
        "EMAIL_CODE, CONTACTS, ",
        "ADDRESSID_TITLE, TELEPHONE, ",
        "ROUTE, REMARKS)",
        "values (#{addressid,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, ",
        "#{emailCode,jdbcType=VARCHAR}, #{contacts,jdbcType=VARCHAR}, ",
        "#{addressidTitle,jdbcType=VARCHAR}, #{telephone,jdbcType=VARCHAR}, ",
        "#{route,jdbcType=VARCHAR}, #{remarks,jdbcType=VARCHAR})"
    })
    int insert(Address record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ADDRESS
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "ADDRESSID, ADDRESS, EMAIL_CODE, CONTACTS, ADDRESSID_TITLE, TELEPHONE, ROUTE, ",
        "REMARKS",
        "from ADDRESS",
        "where ADDRESSID = #{addressid,jdbcType=VARCHAR}"
    })
    @ConstructorArgs({
        @Arg(column="ADDRESSID", javaType=String.class, jdbcType=JdbcType.VARCHAR, id=true),
        @Arg(column="ADDRESS", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="EMAIL_CODE", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="CONTACTS", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="ADDRESSID_TITLE", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="TELEPHONE", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="ROUTE", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="REMARKS", javaType=String.class, jdbcType=JdbcType.VARCHAR)
    })
    Address selectByPrimaryKey(String addressid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ADDRESS
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "ADDRESSID, ADDRESS, EMAIL_CODE, CONTACTS, ADDRESSID_TITLE, TELEPHONE, ROUTE, ",
        "REMARKS",
        "from ADDRESS"
    })
    @ConstructorArgs({
        @Arg(column="ADDRESSID", javaType=String.class, jdbcType=JdbcType.VARCHAR, id=true),
        @Arg(column="ADDRESS", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="EMAIL_CODE", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="CONTACTS", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="ADDRESSID_TITLE", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="TELEPHONE", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="ROUTE", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="REMARKS", javaType=String.class, jdbcType=JdbcType.VARCHAR)
    })
    List<Address> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ADDRESS
     *
     * @mbggenerated
     */
    @Update({
        "update ADDRESS",
        "set ADDRESS = #{address,jdbcType=VARCHAR},",
          "EMAIL_CODE = #{emailCode,jdbcType=VARCHAR},",
          "CONTACTS = #{contacts,jdbcType=VARCHAR},",
          "ADDRESSID_TITLE = #{addressidTitle,jdbcType=VARCHAR},",
          "TELEPHONE = #{telephone,jdbcType=VARCHAR},",
          "ROUTE = #{route,jdbcType=VARCHAR},",
          "REMARKS = #{remarks,jdbcType=VARCHAR}",
        "where ADDRESSID = #{addressid,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(Address record);
}